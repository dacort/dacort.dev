<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Damon Cortesi</title><link>https://dacort.dev/posts/</link><description>Recent content in Posts on Damon Cortesi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Sep 2021 11:51:57 -0700</lastBuildDate><atom:link href="https://dacort.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Updating Partition Values With Apache Hudi</title><link>https://dacort.dev/posts/updating-partition-values-with-apache-hudi/</link><pubDate>Thu, 23 Sep 2021 11:51:57 -0700</pubDate><guid>https://dacort.dev/posts/updating-partition-values-with-apache-hudi/</guid><description>If you&amp;rsquo;re not familiar with Apache Hudi, it&amp;rsquo;s a pretty awesome piece of software that brings transactions and record-level updates/deletes to data lakes.
More specifically, if you&amp;rsquo;re doing Analytics with S3, Hudi provides a way for you to consistently update records in your data lake, which historically has been pretty challenging. It can also optimize file sizes, allow for rollbacks, and makes streaming CDC data impressively easy.
Updating Partition Values I&amp;rsquo;m learning more about Hudi and was following this EMR guide to working with a Hudi dataset, but the &amp;ldquo;Upsert&amp;rdquo; operation didn&amp;rsquo;t quite work as I expected.</description></item><item><title>Continuous Deployment of Jupyter Notebooks</title><link>https://dacort.dev/posts/continuous-deployment-of-jupyter-notebooks/</link><pubDate>Wed, 14 Jul 2021 16:00:00 -0700</pubDate><guid>https://dacort.dev/posts/continuous-deployment-of-jupyter-notebooks/</guid><description>This is a guide on how to use AWS CodePipeline to continuously deploy Jupyter notebooks to an S3-backed static website.
Overview Since I started using EMR Studio, I&amp;rsquo;ve been making more use of Jupyter notebooks as scratch pads and often want to be able to easily share the results of my research. I hunted around for a few different solutions and while there are some good ones like nbconvert and jupytext, I wanted something a bit simpler and off-the-shelf.</description></item><item><title>Building and Testing a new Apache Airflow Plugin</title><link>https://dacort.dev/posts/building-and-testing-a-new-apache-airflow-plugin/</link><pubDate>Fri, 09 Jul 2021 11:30:00 -0700</pubDate><guid>https://dacort.dev/posts/building-and-testing-a-new-apache-airflow-plugin/</guid><description>Recently, I had the opportunity to add a new EMR on EKS plugin to Apache Airflow. While I&amp;rsquo;ve been a consumer of Airflow over the years, I&amp;rsquo;ve never contributed directly to the project. And weighing in at over half a million lines of code, Airflow is a pretty complex project to wade into. So here&amp;rsquo;s a guide on how I made a new operator in the AWS provider package.
Overview Before you get started, it&amp;rsquo;s good to have an understanding of the different components of an Airflow task.</description></item><item><title>Build your own Air Quality Monitor with OpenAQ and EMR on EKS</title><link>https://dacort.dev/posts/emr-eks-custom-images-with-openaq/</link><pubDate>Thu, 24 Jun 2021 21:20:00 +0000</pubDate><guid>https://dacort.dev/posts/emr-eks-custom-images-with-openaq/</guid><description>Fire season is closely approaching and as somebody that spent two weeks last year hunkered down inside with my browser glued to various air quality sites, I wanted to show how to use data from OpenAQ to build your own air quality analysis.
With Amazon EMR on EKS, you can now customize and package your own Apache Spark dependencies and I use that functionality for this post.
Overview OpenAQ maintains a publicly accessible dataset of various air quality metrics that&amp;rsquo;s updated every half hour.</description></item><item><title>5 things they don't tell you about being a developer advocate</title><link>https://dacort.dev/posts/5-things-they-dont-tell-you-about-advocatos/</link><pubDate>Sat, 19 Jun 2021 21:59:00 -0700</pubDate><guid>https://dacort.dev/posts/5-things-they-dont-tell-you-about-advocatos/</guid><description>image credit this awesome cheerful dev advocado sticker
I recently rejoined AWS as a developer advocate for analytics on the EMR team and in the past 6 months I&amp;rsquo;ve learned a lot of things about DevRel&amp;hellip;and a lot about what I didn&amp;rsquo;t know. So here&amp;rsquo;s a top 5 list.
1. There are multiple roles in DevRel Some people focus on community. Others focus on proof-of-concepts. Others still focus on demos, tutorials, or docs.</description></item><item><title>Big Data Stack with CDK</title><link>https://dacort.dev/posts/cdk-big-data-stack/</link><pubDate>Fri, 18 Jun 2021 21:59:00 -0700</pubDate><guid>https://dacort.dev/posts/cdk-big-data-stack/</guid><description>How I built my own Apache Spark environment on AWS using Amazon EMR, Amazon EKS, and the AWS Cloud Development Kit (CDK).</description></item><item><title>Initial Revision</title><link>https://dacort.dev/posts/initial-revision/</link><pubDate>Fri, 18 Jun 2021 21:57:00 -0700</pubDate><guid>https://dacort.dev/posts/initial-revision/</guid><description>Hi there üëã
It&amp;rsquo;s been a long time ‚Äì¬†3,399 days to exact ‚Äì since I&amp;rsquo;ve blogged, but since starting a new role as a developer advocate I figured it was a good time to start again. üòÅ
Welcome to the 2021 revamp of my personal developer site. In it, you will find:
Posts about technical (and sometimes personal) content Personal and work projects I want to share I get excited and make things, and will do my best to share that here.</description></item></channel></rss>